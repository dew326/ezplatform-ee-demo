(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["ezplatform-page-builder-block-config-js"],{

/***/ "./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.embed.field.base.js":
/*!***********************************************************************************************************************************!*\
  !*** ./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.embed.field.base.js ***!
  \***********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n(function (global, doc) {\n  var eZ = global.eZ = global.eZ || {};\n  var SELECTOR_FIELD_WRAPPER = '.ez-block-embed-field';\n\n  eZ.BlockConfigEmbedFieldBase =\n  /*#__PURE__*/\n  function () {\n    function BlockConfigEmbedFieldBase() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      _classCallCheck(this, BlockConfigEmbedFieldBase);\n\n      this.selectorPreview = config.selectorPreview || '.ez-embed-meta__preview';\n      this.selectorTitle = config.selectorTitle || '.ez-embed-meta__title';\n      this.selectorContentType = config.selectorContentType || '.ez-embed-meta__content-type';\n      this.selectorEmbedMeta = config.selectorEmbedMeta || '.ez-embed-meta';\n      this.previewFieldTypeIdentifier = config.previewFieldTypeIdentifier || 'ezimage';\n      this.openUDWSelector = config.openUDWSelector || '[data-open-udw-embed]';\n      this.openUDW = this.openUDW.bind(this);\n    }\n    /**\n     * Gets placeholders nodes\n     *\n     * @method getPlaceholderNodes\n     * @param {HTMLElement} container\n     * @returns {Object}\n     */\n\n\n    _createClass(BlockConfigEmbedFieldBase, [{\n      key: \"getPlaceholderNodes\",\n      value: function getPlaceholderNodes(container) {\n        return {\n          preview: container.querySelector(this.selectorPreview),\n          title: container.querySelector(this.selectorTitle),\n          contentType: container.querySelector(this.selectorContentType)\n        };\n      }\n      /**\n       * Clears the meta information\n       *\n       * @method clearMeta\n       * @param {HTMLElement} btn\n       * @param {HTMLElement} container\n       */\n\n    }, {\n      key: \"clearMeta\",\n      value: function clearMeta(btn, container) {\n        doc.querySelector(btn.dataset.target).value = '';\n        container.setAttribute('hidden', true);\n        btn.removeAttribute('hidden');\n      }\n      /**\n       * Gets the preview src\n       *\n       * @method getPreviewSrc\n       * @param {Array} data list of Content objects\n       * @returns {String}\n       */\n\n    }, {\n      key: \"getPreviewSrc\",\n      value: function getPreviewSrc(data) {\n        var _this = this;\n\n        var versionData = Array.isArray(data) ? data[0] || {} : {};\n\n        if (!versionData.CurrentVersion) {\n          return '';\n        }\n\n        var version = versionData.CurrentVersion.Version;\n        var imageField = version.Fields.field.find(function (field) {\n          return field.fieldTypeIdentifier === _this.previewFieldTypeIdentifier;\n        });\n        return imageField && imageField.fieldValue ? imageField.fieldValue.uri : '';\n      }\n      /**\n       * Gets the input value\n       *\n       * @method getInputValue\n       * @param {Array} data list of Content objects\n       * @returns {Number}\n       */\n\n    }, {\n      key: \"getInputValue\",\n      value: function getInputValue(data) {\n        return data[0].ContentInfo.Content._id;\n      }\n      /**\n       * Gets the content info\n       *\n       * @method getContentInfo\n       * @param {Array} data list of Content objects\n       * @returns {Object}\n       */\n\n    }, {\n      key: \"getContentInfo\",\n      value: function getContentInfo(data) {\n        return data[0].ContentInfo.Content;\n      }\n      /**\n       * Updates the field value\n       *\n       * @method updateFieldValue\n       * @param {HTMLElement} btn\n       * @param {Array} items list of Content objects\n       */\n\n    }, {\n      key: \"updateFieldValue\",\n      value: function updateFieldValue(btn, items) {\n        var metaContainer = btn.closest(SELECTOR_FIELD_WRAPPER).querySelector(this.selectorEmbedMeta);\n        var contentInfo = this.getContentInfo(items);\n        var previewSrc = this.getPreviewSrc(items);\n        var inputValue = this.getInputValue(items);\n\n        var _this$getPlaceholderN = this.getPlaceholderNodes(metaContainer),\n            preview = _this$getPlaceholderN.preview,\n            title = _this$getPlaceholderN.title,\n            contentType = _this$getPlaceholderN.contentType;\n\n        var hiddenAttrMethod = previewSrc ? 'removeAttribute' : 'setAttribute';\n        var contentTypeIdentifier = contentInfo.ContentTypeInfo.identifier;\n        var contentTypeName = eZ.adminUiConfig.contentTypeNames[contentTypeIdentifier];\n        doc.querySelector(btn.dataset.target).value = inputValue;\n        title.innerHTML = contentInfo.Name;\n        contentType.innerHTML = contentTypeName;\n        preview.src = previewSrc;\n        preview[hiddenAttrMethod]('hidden', true);\n        metaContainer.removeAttribute('hidden');\n        btn.setAttribute('hidden', true);\n      }\n      /**\n       * Attaches event listener for remove button\n       *\n       * @method attachRemoveItemEvent\n       * @param {HTMLElement} btn\n       */\n\n    }, {\n      key: \"attachRemoveItemEvent\",\n      value: function attachRemoveItemEvent(btn) {\n        var metaContainer = btn.closest(SELECTOR_FIELD_WRAPPER).querySelector(this.selectorEmbedMeta);\n        var removeBtn = metaContainer.querySelector('.ez-embed-meta__action--remove');\n        removeBtn.addEventListener('click', this.clearMeta.bind(this, btn, metaContainer), false);\n      }\n      /**\n       * Opens UDW\n       *\n       * @method openUDW\n       * @param {Event} event\n       */\n\n    }, {\n      key: \"openUDW\",\n      value: function openUDW(event) {\n        event.preventDefault();\n        var currentTarget = event.currentTarget;\n        var config = JSON.parse(currentTarget.dataset.udwConfig);\n        var title = Translator.trans(\n        /*@Desc(\"Browse content\")*/\n        'config_form.block_config.embed_field_base.udw.title', {}, 'page_builder');\n        var openUdwEvent = new CustomEvent('openUdw', {\n          detail: Object.assign({\n            title: title,\n            multiple: false,\n            startingLocationId: eZ.adminUiConfig.universalDiscoveryWidget.startingLocationId,\n            onConfirm: this.updateFieldValue.bind(this, currentTarget)\n          }, config)\n        });\n        doc.body.dispatchEvent(openUdwEvent);\n      }\n      /**\n       * Initializes the embed field event handlers\n       *\n       * @method init\n       */\n\n    }, {\n      key: \"init\",\n      value: function init() {\n        var _this2 = this;\n\n        var openUdwBtns = _toConsumableArray(doc.querySelectorAll(this.openUDWSelector));\n\n        openUdwBtns.forEach(function (btn) {\n          _this2.attachRemoveItemEvent(btn);\n\n          btn.addEventListener('click', _this2.openUDW, false);\n        });\n      }\n    }]);\n\n    return BlockConfigEmbedFieldBase;\n  }();\n})(window, document);\n\n//# sourceURL=webpack:///./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.embed.field.base.js?");

/***/ }),

/***/ "./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.fields.errors.js":
/*!********************************************************************************************************************************!*\
  !*** ./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.fields.errors.js ***!
  \********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n(function (doc, $) {\n  var SELECTOR_INVALID = '.is-invalid';\n  var SELECTOR_TAB = '.ez-block-config__tab';\n  var SELECTOR_NAV_LINK = '.ez-block-config__link';\n  var CLASS_HAS_INVALID_FIELDS = 'ez-block-config__link--has-invalid-fields';\n\n  var errorNodes = _toConsumableArray(doc.querySelectorAll(SELECTOR_INVALID));\n\n  errorNodes.forEach(function (errorNode, index) {\n    var tab = errorNode.closest(SELECTOR_TAB);\n    var tabId = tab.id;\n    var navLink = doc.querySelector(\"\".concat(SELECTOR_NAV_LINK, \"[href=\\\"#\").concat(tabId, \"\\\"]\"));\n    navLink.classList.add(CLASS_HAS_INVALID_FIELDS);\n\n    if (!index) {\n      $(navLink).tab('show');\n    }\n  });\n})(window.document, window.jQuery);\n\n//# sourceURL=webpack:///./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.fields.errors.js?");

/***/ }),

/***/ "./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.schedule.field.base.js":
/*!**************************************************************************************************************************************!*\
  !*** ./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.schedule.field.base.js ***!
  \**************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n(function (global, doc) {\n  var eZ = global.eZ = global.eZ || {};\n\n  eZ.BlockConfigScheduleFieldBase =\n  /*#__PURE__*/\n  function () {\n    function BlockConfigScheduleFieldBase() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      _classCallCheck(this, BlockConfigScheduleFieldBase);\n\n      this.classLoading = config.classLoading || 'ez-schedule--is-loading';\n      this.selectorContainer = config.selectorContainer || '.ez-schedule';\n      this.selectorActiveList = config.selectorActiveList || '.ez-schedule__active-items';\n      this.selectorActiveItem = config.selectorActiveItem || '.ez-schedule__active-item';\n      this.selectorNoActiveItemsInfo = config.selectorNoActiveItemsInfo || '.ez-schedule__no-active-items-info';\n      this.selectorQueueList = config.selectorQueueList || '.ez-schedule__queue-items';\n      this.selectorQueueItem = config.selectorQueueItem || '.ez-schedule__queue-item';\n      this.selectorNoQueuedItemsInfo = config.selectorNoQueuedItemsInfo || '.ez-schedule__no-queued-items-info';\n      this.selectorPlaceholder = config.selectorPlaceholder || '.ez-schedule__active-item--placeholder';\n      this.selectorOpenUdwBtn = config.selectorOpenUdwBtn || '.ez-btn--select-content';\n      this.selectorTrashBtn = config.selectorTrashBtn || '.ez-btn--trash';\n      this.selectorChangeAirtimeBtn = config.selectorChangeAirtimeBtn || '.ez-btn--change-airtime';\n      this.selectorEventsTextarea = config.selectorEventsTextarea || '#block_configuration_attributes_events_value';\n      this.timeoutRemovePlaceholders = config.timeoutRemovePlaceholders || 500;\n      this.classNoActiveItemsInfoHidden = config.classNoActiveItemsInfoHidden || 'ez-schedule__no-active-items-info--hidden';\n      this.classActiveItemUnavailable = config.classActiveItemUnavailable || 'ez-schedule__active-item--is-unavailable';\n      this.classNoQueuedItemsInfoHidden = config.classNoQueuedItemsInfoHidden || 'ez-schedule__no-queued-items-info--hidden';\n      this.classQueuedItemUnavailable = config.classQueuedItemUnavailable || 'ez-schedule__queue-item--is-unavailable';\n      this.classActiveItemDragDisabled = config.classActiveItemDragDisabled || 'ez-schedule__active-item--drag-disabled';\n      this.draggedItem = null;\n      this.onDragOverTimeout = null;\n      this.onDragStartHandler = this.onDragStartHandler.bind(this);\n      this.renderItems = this.renderItems.bind(this);\n      this.lastItemsListRequestNo = -1;\n    }\n\n    _createClass(BlockConfigScheduleFieldBase, [{\n      key: \"getItemsList\",\n      value: function getItemsList(container, events) {\n        var _this = this;\n\n        var url = window.Routing.generate('ezplatform.page.block.schedule_block.list_content');\n        var model = JSON.parse(container.dataset.model);\n        var blockValue = model.blockValue;\n        var data = new FormData();\n        this.lastItemsListRequestNo += 1;\n        this.toggleLoadingScreen(container, true);\n        blockValue.attributes = blockValue.attributes.map(function (attr) {\n          if (attr.name === 'events') {\n            attr.value = JSON.stringify(events);\n          }\n\n          return attr;\n        });\n        data.append('blockValue', JSON.stringify(blockValue));\n        var request = new Request(url, {\n          method: 'POST',\n          body: data,\n          mode: 'same-origin',\n          credentials: 'same-origin'\n        });\n        var requestNo = this.lastItemsListRequestNo;\n        fetch(request).then(function (response) {\n          return response.json();\n        }).then(function (json) {\n          if (requestNo < _this.lastItemsListRequestNo) {\n            return;\n          }\n\n          var _json$lists = json.lists,\n              active = _json$lists.active,\n              queue = _json$lists.queue;\n          container.dataset.blockValue = JSON.stringify(json.blockValue);\n\n          _this.renderItems(container, {\n            active: active,\n            queue: queue\n          });\n        });\n      }\n    }, {\n      key: \"addNewEvents\",\n      value: function addNewEvents(container, newEvents) {\n        var eventsTextarea = container.querySelector(this.selectorEventsTextarea);\n        var currentEvents = JSON.parse(eventsTextarea.value);\n        var allEvents = [].concat(_toConsumableArray(currentEvents), _toConsumableArray(newEvents));\n        eventsTextarea.value = JSON.stringify(allEvents);\n        return allEvents;\n      }\n    }, {\n      key: \"toggleLoadingScreen\",\n      value: function toggleLoadingScreen(container, show) {\n        container.classList.toggle(this.classLoading, show);\n      }\n    }, {\n      key: \"openUdw\",\n      value: function openUdw(container, event) {\n        event.preventDefault();\n        var currentTarget = event.currentTarget;\n        var config = JSON.parse(currentTarget.dataset.udwConfig);\n        var title = Translator.trans(\n        /*@Desc(\"Select content\")*/\n        'config_form.widgets.schedule.udw.title', {}, 'page_builder');\n        var openUdwEvent = new CustomEvent('openUdw', {\n          detail: Object.assign({\n            title: title,\n            multiple: true,\n            startingLocationId: parseInt(eZ.adminUiConfig.universalDiscoveryWidget.startingLocationId, 10),\n            onConfirm: this.confirmUdwHandler.bind(this, container)\n          }, config)\n        });\n        doc.body.dispatchEvent(openUdwEvent);\n      }\n    }, {\n      key: \"openAirtimePopup\",\n      value: function openAirtimePopup(callback) {\n        var airtime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.getDefaultAirtime();\n        var openAirtimePopupEvent = new CustomEvent('openAirtimePopup', {\n          detail: {\n            airtime: airtime,\n            onSubmit: callback\n          }\n        });\n        doc.body.dispatchEvent(openAirtimePopupEvent);\n      }\n    }, {\n      key: \"confirmUdwHandler\",\n      value: function confirmUdwHandler(container, items) {\n        this.openAirtimePopup(this.addItemsFromUDW.bind(this, container, items));\n      }\n    }, {\n      key: \"addItemsFromUDW\",\n      value: function addItemsFromUDW(container, itemsLocations, airtime) {\n        var _this2 = this;\n\n        var events = itemsLocations.map(function (itemLocation) {\n          var itemData = {\n            locationId: itemLocation.id\n          };\n          return _this2.createItemAddedEvent(itemData, airtime);\n        });\n        var allEvents = this.addNewEvents(container, events);\n        this.getItemsList(container, allEvents);\n      }\n      /**\n       *\n       * @param {Number} dateTime\n       * @returns {{id: String, dateTime: Number}}\n       */\n\n    }, {\n      key: \"getEventBasicParams\",\n      value: function getEventBasicParams(dateTime) {\n        return {\n          id: this.generateId('sbe-'),\n          dateTime: dateTime\n        };\n      }\n      /**\n       * @returns {Number}\n       */\n\n    }, {\n      key: \"getDefaultAirtime\",\n      value: function getDefaultAirtime() {\n        var now = new Date();\n        now.setSeconds(0);\n        return Math.floor(now.getTime() / 1000);\n      }\n    }, {\n      key: \"createEvent\",\n      value: function createEvent(additionalParams, type) {\n        var airtime = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.getDefaultAirtime();\n        var basicEventParams = this.getEventBasicParams(airtime);\n        return Object.assign({}, basicEventParams, additionalParams, {\n          type: type\n        });\n      }\n    }, {\n      key: \"createItemAddedEvent\",\n      value: function createItemAddedEvent(_ref, additionDate) {\n        var locationId = _ref.locationId;\n        var newItemData = {\n          id: this.generateId('sbi-'),\n          additionDate: additionDate,\n          location: {\n            id: locationId\n          }\n        };\n        return this.createEvent({\n          item: newItemData\n        }, 'itemAdded', additionDate);\n      }\n    }, {\n      key: \"createItemRemovedEvent\",\n      value: function createItemRemovedEvent(_ref2, dateTime) {\n        var itemId = _ref2.itemId;\n        return this.createEvent({\n          itemId: itemId\n        }, 'itemRemoved', dateTime);\n      }\n    }, {\n      key: \"createItemsReorderedEvent\",\n      value: function createItemsReorderedEvent(_ref3, dateTime) {\n        var map = _ref3.map;\n        return this.createEvent({\n          map: map\n        }, 'itemsReordered', dateTime);\n      }\n    }, {\n      key: \"createLimitChangedEvent\",\n      value: function createLimitChangedEvent(_ref4, dateTime) {\n        var limit = _ref4.limit;\n        return this.createEvent({\n          limit: limit\n        }, 'limitChanged', dateTime);\n      }\n    }, {\n      key: \"generateId\",\n      value: function generateId() {\n        var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'id-';\n        return [prefix, this.makeIdPiece(), this.makeIdPiece(true), this.makeIdPiece(true), this.makeIdPiece()].join('');\n      }\n    }, {\n      key: \"makeIdPiece\",\n      value: function makeIdPiece(addDashes) {\n        var piece = (Math.random().toString(16) + '000000000').substr(2, 8);\n        return addDashes ? '-' + piece.substr(0, 4) + '-' + piece.substr(4, 4) : piece;\n      }\n    }, {\n      key: \"onDragStartHandler\",\n      value: function onDragStartHandler(event) {\n        event.dataTransfer.dropEffect = 'move';\n        event.dataTransfer.setData('text/html', event.currentTarget);\n        this.draggedItem = event.currentTarget;\n      }\n    }, {\n      key: \"hidePlaceholdersAfterTimeout\",\n      value: function hidePlaceholdersAfterTimeout(container) {\n        var _this3 = this;\n\n        global.clearTimeout(this.onDragOverTimeout);\n        this.onDragOverTimeout = global.setTimeout(function () {\n          return _this3.removePlaceholder(container);\n        }, this.timeoutRemovePlaceholders);\n      }\n    }, {\n      key: \"attachEventsToDraggableItems\",\n      value: function attachEventsToDraggableItems(container, item) {\n        item.ondragstart = this.onDragStartHandler;\n        item.ondrag = this.hidePlaceholdersAfterTimeout.bind(this, container);\n      }\n    }, {\n      key: \"attachEventsToActiveListBtns\",\n      value: function attachEventsToActiveListBtns(container, item) {\n        item.querySelector(this.selectorTrashBtn).addEventListener('click', this.removeListItem.bind(this, container, false), false);\n        item.querySelector(this.selectorChangeAirtimeBtn).addEventListener('click', this.updateAirtime.bind(this, container), false);\n      }\n    }, {\n      key: \"attachEventsToQueueListBtns\",\n      value: function attachEventsToQueueListBtns(container, item) {\n        item.querySelector(this.selectorTrashBtn).addEventListener('click', this.removeListItem.bind(this, container, true), false);\n        item.querySelector(this.selectorChangeAirtimeBtn).addEventListener('click', this.updateAirtime.bind(this, container), false);\n      }\n    }, {\n      key: \"attachEventsToLimitInput\",\n      value: function attachEventsToLimitInput(container) {\n        var limitInput = container.querySelector('#block_configuration_attributes_limit_value');\n        limitInput.addEventListener('change', this.onLimitChanged.bind(this, container), false);\n      }\n    }, {\n      key: \"updateAirtime\",\n      value: function updateAirtime(container, event) {\n        event.preventDefault();\n        var itemNode = event.target.closest('[data-airtime]');\n        var isUnavailable = itemNode.classList.contains(this.classActiveItemUnavailable) || itemNode.classList.contains(this.classQueuedItemUnavailable);\n\n        if (isUnavailable) {\n          return;\n        }\n\n        var airtime = itemNode.dataset.airtime;\n        this.openAirtimePopup(this.setAirtime.bind(this, container, event), airtime);\n      }\n    }, {\n      key: \"setAirtime\",\n      value: function setAirtime(container, event, airtime) {\n        var itemNode = event.target.closest('[data-item-id]');\n        var _itemNode$dataset = itemNode.dataset,\n            locationId = _itemNode$dataset.locationId,\n            itemId = _itemNode$dataset.itemId;\n        var oldAirtime = itemNode.dataset.airtime;\n        var isItemInQueue = itemNode.classList.contains('ez-schedule__queue-item');\n        var removedAirtime = isItemInQueue ? oldAirtime : this.getDefaultAirtime();\n        var eventRemoved = this.createItemRemovedEvent({\n          itemId: itemId\n        }, removedAirtime);\n        var eventAdded = this.createItemAddedEvent({\n          locationId: locationId\n        }, airtime);\n        var allEvents = this.addNewEvents(container, [eventRemoved, eventAdded]);\n        this.getItemsList(container, allEvents);\n      }\n    }, {\n      key: \"removeListItem\",\n      value: function removeListItem(container, isQueueList, event) {\n        event.preventDefault();\n        var listElementNode = event.currentTarget.closest('[data-item-id]');\n        var _listElementNode$data = listElementNode.dataset,\n            itemId = _listElementNode$data.itemId,\n            airtime = _listElementNode$data.airtime;\n        var scheduleEvent = isQueueList ? this.createItemRemovedEvent({\n          itemId: itemId\n        }, airtime) : this.createItemRemovedEvent({\n          itemId: itemId\n        });\n        var allEvents = this.addNewEvents(container, [scheduleEvent]);\n        listElementNode.remove();\n        this.getItemsList(container, allEvents);\n      }\n    }, {\n      key: \"removePlaceholder\",\n      value: function removePlaceholder(container) {\n        var placeholder = container.querySelector(this.selectorPlaceholder);\n\n        if (placeholder) {\n          placeholder.remove();\n        }\n      }\n    }, {\n      key: \"addPlaceholder\",\n      value: function addPlaceholder(container, element, positionY) {\n        var wrapper = doc.createElement('div');\n        var list = container.querySelector(this.selectorActiveList);\n        var rect = element.getBoundingClientRect();\n        var middlePositionY = rect.top + rect.height / 2;\n        var where = positionY <= middlePositionY ? element : element.nextSibling;\n        wrapper.insertAdjacentHTML('beforeend', list.dataset.placeholder);\n        var placeholder = wrapper.querySelector(this.selectorPlaceholder);\n        list.insertBefore(placeholder, where);\n      }\n    }, {\n      key: \"onDragOverHandler\",\n      value: function onDragOverHandler(container, event) {\n        var listItem = event.target.closest(\"\".concat(this.selectorActiveItem, \":not(\").concat(this.selectorPlaceholder, \")\"));\n\n        if (!listItem) {\n          return false;\n        }\n\n        this.removePlaceholder(container);\n        this.addPlaceholder(container, listItem, event.clientY);\n      }\n      /**\n       *\n       * @param {HTMLElement} container\n       */\n\n    }, {\n      key: \"onDropHandler\",\n      value: function onDropHandler(container) {\n        var list = container.querySelector(this.selectorActiveList);\n        list.insertBefore(this.draggedItem, list.querySelector(this.selectorPlaceholder));\n        this.removePlaceholder(container);\n        this.onItemsReordered(container, list);\n      }\n      /**\n       *\n       * @param {HTMLElement} container\n       * @param {HTMLElement} list\n       */\n\n    }, {\n      key: \"onItemsReordered\",\n      value: function onItemsReordered(container, list) {\n        var elementsNodes = list.querySelectorAll('.ez-schedule__active-item');\n\n        var newOrderIdsMap = _toConsumableArray(elementsNodes).map(function (elementNode) {\n          return elementNode.dataset.itemId;\n        });\n\n        var reorderEvent = this.createItemsReorderedEvent({\n          map: newOrderIdsMap\n        });\n        var allEvents = this.addNewEvents(container, [reorderEvent]);\n        this.getItemsList(container, allEvents);\n      }\n      /**\n       *\n       * @param {HTMLElement} container\n       * @param {Event} event\n       */\n\n    }, {\n      key: \"onLimitChanged\",\n      value: function onLimitChanged(container, event) {\n        var inputElement = event.target;\n        var newLimit = inputElement.value;\n        var limitChangeEvent = this.createLimitChangedEvent({\n          limit: newLimit\n        });\n        var allEvents = this.addNewEvents(container, [limitChangeEvent]);\n        this.getItemsList(container, allEvents);\n      }\n    }, {\n      key: \"renderActiveItem\",\n      value: function renderActiveItem(container, item) {\n        var list = container.querySelector(this.selectorActiveList);\n        var template = list.dataset.activeItemTemplate;\n        var isUnavailable = item.location.unavailable;\n        var additionalClasses = isUnavailable ? this.classActiveItemUnavailable : '';\n        var renderedItem = template.replace('{{ content_name }}', item.location.contentInfo.name).replace('{{ item_id }}', item.id).replace('{{ location_id }}', item.location.id).replace('{{ airtime }}', item.additionDate).replace('{{ additional_classes }}', additionalClasses);\n        var wrapper = doc.createElement('div');\n        wrapper.insertAdjacentHTML('beforeend', renderedItem);\n        var listItem = wrapper.querySelector(this.selectorActiveItem);\n        list.append(listItem);\n      }\n    }, {\n      key: \"renderQueueItem\",\n      value: function renderQueueItem(container, item) {\n        var formatDateWithTimezone = eZ.helpers.timezone.formatDateWithTimezone;\n        var formatedAdditionDate = formatDateWithTimezone(item.additionDate * 1000);\n        var list = container.querySelector(this.selectorQueueList);\n        var isUnavailable = item.location.unavailable;\n        var additionalClasses = isUnavailable ? this.classQueuedItemUnavailable : '';\n        var template = list.dataset.queueTemplate;\n        var renderedItem = template.replace('{{ content_name }}', item.location.contentInfo.name).replace('{{ item_id }}', item.id).replace('{{ location_id }}', item.location.id).replace('{{ airtime }}', item.additionDate).replace('{{ airtime_formatted }}', formatedAdditionDate).replace('{{ additional_classes }}', additionalClasses);\n        var wrapper = doc.createElement('div');\n        wrapper.insertAdjacentHTML('beforeend', renderedItem);\n        var listItem = wrapper.querySelector(this.selectorQueueItem);\n        list.append(listItem);\n      }\n    }, {\n      key: \"removeNodeChildren\",\n      value: function removeNodeChildren(node) {\n        while (node.firstChild) {\n          node.removeChild(node.firstChild);\n        }\n      }\n    }, {\n      key: \"clearItems\",\n      value: function clearItems(container) {\n        var activeList = container.querySelector(this.selectorActiveList);\n        var queueList = container.querySelector(this.selectorQueueList);\n        this.removeNodeChildren(activeList);\n        this.removeNodeChildren(queueList);\n      }\n    }, {\n      key: \"manageNoItemsLabels\",\n      value: function manageNoItemsLabels(container, _ref5) {\n        var activeItems = _ref5.activeItems,\n            queuedItems = _ref5.queuedItems;\n        var noActiveItems = !activeItems.length;\n        var noQueuedItems = !queuedItems.length;\n        container.querySelector(this.selectorNoActiveItemsInfo).classList.toggle(this.classNoActiveItemsInfoHidden, !noActiveItems);\n        container.querySelector(this.selectorNoQueuedItemsInfo).classList.toggle(this.classNoQueuedItemsInfoHidden, !noQueuedItems);\n      }\n    }, {\n      key: \"renderItems\",\n      value: function renderItems(container, _ref6) {\n        var active = _ref6.active,\n            queue = _ref6.queue;\n        this.clearItems(container);\n        this.manageNoItemsLabels(container, {\n          activeItems: active,\n          queuedItems: queue\n        });\n        active.forEach(this.renderActiveItem.bind(this, container));\n        queue.forEach(this.renderQueueItem.bind(this, container));\n        this.attachEventsToLists(container);\n        this.toggleLoadingScreen(container, false);\n      }\n    }, {\n      key: \"disableDragOnActiveList\",\n      value: function disableDragOnActiveList(container) {\n        var _this4 = this;\n\n        var activeItems = container.querySelectorAll(this.selectorActiveItem);\n        activeItems.forEach(function (activeItem) {\n          activeItem.classList.add(_this4.classActiveItemDragDisabled);\n        });\n      }\n    }, {\n      key: \"attachEventsToLists\",\n      value: function attachEventsToLists(container) {\n        var activeList = container.querySelector(this.selectorActiveList);\n        var activeListItems = activeList.querySelectorAll(this.selectorActiveItem);\n        var queueListItems = container.querySelectorAll(this.selectorQueueItem);\n\n        if (activeListItems.length > 1) {\n          activeList.ondragover = this.onDragOverHandler.bind(this, container);\n          activeListItems.forEach(this.attachEventsToDraggableItems.bind(this, container));\n        } else {\n          activeList.ondragover = null;\n          this.disableDragOnActiveList(container);\n        }\n\n        activeList.ondrop = this.onDropHandler.bind(this, container);\n        activeListItems.forEach(this.attachEventsToActiveListBtns.bind(this, container));\n        queueListItems.forEach(this.attachEventsToQueueListBtns.bind(this, container));\n      }\n      /**\n       * Initializes the schedule field event handlers\n       *\n       * @method init\n       */\n\n    }, {\n      key: \"init\",\n      value: function init() {\n        var _this5 = this;\n\n        var containers = doc.querySelectorAll(this.selectorContainer);\n        containers.forEach(function (container) {\n          var openUdwBtn = container.querySelector(_this5.selectorOpenUdwBtn);\n          var model = JSON.parse(container.dataset.model);\n\n          _this5.attachEventsToLists(container);\n\n          _this5.attachEventsToLimitInput(container);\n\n          _this5.renderItems(container, {\n            active: model.lists.active,\n            queue: model.lists.queue\n          });\n\n          openUdwBtn.addEventListener('click', _this5.openUdw.bind(_this5, container), false);\n        });\n      }\n    }]);\n\n    return BlockConfigScheduleFieldBase;\n  }();\n})(window, document);\n\n//# sourceURL=webpack:///./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.schedule.field.base.js?");

/***/ }),

/***/ "./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.scheduler.js":
/*!****************************************************************************************************************************!*\
  !*** ./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.scheduler.js ***!
  \****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function (global, doc) {\n  var SELECTOR_REVEAL = '.ez-reveal-hide-date-time__reveal';\n  var SELECTOR_HIDE = '.ez-reveal-hide-date-time__hide';\n  var SELECTOR_PICKER = '.ez-picker';\n  var SELECTOR_PICKER_INPUT = '.ez-picker__input';\n  var SELECTOR_PICKER_FORM_INPUT = '.ez-picker__form-input';\n  var containerReveal = doc.querySelector(SELECTOR_REVEAL);\n  var containerHide = doc.querySelector(SELECTOR_HIDE);\n\n  if (!containerReveal || !containerHide) {\n    return;\n  }\n\n  var pickerComponentReveal = containerReveal.querySelector('#block_configuration_since_custom_date').closest(SELECTOR_PICKER);\n  var pickerComponentHide = containerHide.querySelector('#block_configuration_till_custom_date').closest(SELECTOR_PICKER);\n\n  var getNowAccurateToMinutes = function getNowAccurateToMinutes() {\n    var now = new Date();\n    now.setSeconds(0);\n    return now;\n  };\n\n  var getPickerSelectedDate = function getPickerSelectedDate(pickerComponent) {\n    var pickerHiddenInput = pickerComponent.querySelector(SELECTOR_PICKER_FORM_INPUT);\n    var inputValue = pickerHiddenInput.value;\n    return inputValue ? new Date(inputValue * 1000) : null;\n  };\n\n  var getPickerFlatpickrInstance = function getPickerFlatpickrInstance(pickerComponent) {\n    var pickerInput = pickerComponent.querySelector(SELECTOR_PICKER_INPUT);\n    return pickerInput._flatpickr;\n  };\n\n  var setPickerDate = function setPickerDate(pickerContainer, date) {\n    var pickerInstance = getPickerFlatpickrInstance(pickerContainer);\n    pickerInstance.setDate(date, true);\n  };\n\n  var setPickerMinDate = function setPickerMinDate(pickerContainer, minDate) {\n    var pickerInstance = getPickerFlatpickrInstance(pickerContainer);\n    pickerInstance.set('minDate', minDate);\n  };\n\n  var toggleCustomDateInput = function toggleCustomDateInput(customDateInput, disabled) {\n    customDateInput.hidden = disabled;\n  };\n\n  var isRadioButton = function isRadioButton(eventTarget) {\n    return eventTarget.type === 'radio';\n  };\n\n  var setNeverHideState = function setNeverHideState() {\n    var neverOptionRadioButton = containerHide.querySelector('input[type=radio][value=never]');\n    neverOptionRadioButton.checked = true;\n    toggleCustomDateInput(pickerComponentHide, true);\n  };\n\n  var onRevealOptionChange = function onRevealOptionChange(_ref) {\n    var target = _ref.target;\n\n    if (!isRadioButton(target)) {\n      return;\n    }\n\n    var customDateOptionSelected = target.value === 'custom_date';\n    var nowAccurateToMinutes = getNowAccurateToMinutes();\n\n    if (customDateOptionSelected) {\n      setPickerMinDate(pickerComponentReveal, nowAccurateToMinutes);\n      setPickerDate(pickerComponentReveal, nowAccurateToMinutes);\n      setPickerMinDate(pickerComponentHide, nowAccurateToMinutes);\n    } else {\n      var hideDate = getPickerSelectedDate(pickerComponentHide);\n\n      if (hideDate && hideDate < nowAccurateToMinutes) {\n        setNeverHideState();\n      } else {\n        setPickerMinDate(pickerComponentHide, nowAccurateToMinutes);\n      }\n    }\n\n    toggleCustomDateInput(pickerComponentReveal, !customDateOptionSelected);\n  };\n\n  var onHideOptionChange = function onHideOptionChange(_ref2) {\n    var target = _ref2.target;\n\n    if (!isRadioButton(target)) {\n      return;\n    }\n\n    var customDateOptionSelected = target.value === 'custom_date';\n\n    if (customDateOptionSelected) {\n      var _revealDate = getPickerSelectedDate(pickerComponentReveal);\n\n      var _nowAccurateToMinutes = getNowAccurateToMinutes();\n\n      var newMinHideDate = _revealDate < _nowAccurateToMinutes ? _nowAccurateToMinutes : _revealDate;\n      setPickerMinDate(pickerComponentHide, newMinHideDate);\n      setPickerDate(pickerComponentHide, newMinHideDate);\n    }\n\n    toggleCustomDateInput(pickerComponentHide, !customDateOptionSelected);\n  };\n\n  var onRevealCustomDateChange = function onRevealCustomDateChange(newDates) {\n    if (!newDates.length) {\n      return;\n    }\n\n    var newRevealDate = new Date(newDates[0]);\n    var hideDate = getPickerSelectedDate(pickerComponentHide);\n    var clearHideDate = newRevealDate > hideDate;\n    setPickerMinDate(pickerComponentHide, newRevealDate);\n\n    if (clearHideDate) {\n      // flatpickr ignores minDate when only time has changed:\n      // https://github.com/flatpickr/flatpickr/issues/591\n      setPickerDate(pickerComponentHide, null);\n    }\n  };\n\n  var flatpickrInstanceReveal = getPickerFlatpickrInstance(pickerComponentReveal);\n  var isCustomDateSelectedReveal = containerReveal.querySelector('input[type=radio][value=custom_date]').checked;\n  var isCustomDateSelectedHide = containerHide.querySelector('input[type=radio][value=custom_date]').checked;\n  var revealDate = getPickerSelectedDate(pickerComponentReveal);\n  var nowAccurateToMinutes = getNowAccurateToMinutes();\n  flatpickrInstanceReveal.config.onChange.push(onRevealCustomDateChange);\n  toggleCustomDateInput(pickerComponentReveal, !isCustomDateSelectedReveal);\n  toggleCustomDateInput(pickerComponentHide, !isCustomDateSelectedHide);\n  setPickerMinDate(pickerComponentReveal, nowAccurateToMinutes);\n  setPickerMinDate(pickerComponentHide, revealDate);\n  containerReveal.addEventListener('click', onRevealOptionChange, false);\n  containerHide.addEventListener('click', onHideOptionChange, false);\n})(window, window.document);\n\n//# sourceURL=webpack:///./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.scheduler.js?");

/***/ }),

/***/ "./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.select.field.base.js":
/*!************************************************************************************************************************************!*\
  !*** ./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.select.field.base.js ***!
  \************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n(function (global, doc) {\n  var eZ = global.eZ = global.eZ || {};\n\n  eZ.BlockConfigSelectFieldBase =\n  /*#__PURE__*/\n  function () {\n    function BlockConfigSelectFieldBase() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      _classCallCheck(this, BlockConfigSelectFieldBase);\n\n      this.selectorContainer = config.selectorContainer || '.ez-block-select-field';\n      this.selectorSourceInput = config.selectorSourceInput || 'select';\n      this.selectorSelected = config.selectorSelected || '.ez-block-select-field__selected';\n      this.selectorSelectedItem = config.selectorSelectedItem || '.ez-block-select-field__selected-item';\n      this.selectorOptions = config.selectorOptions || '.ez-block-select-field__options';\n      this.selectorOptionsItem = config.selectorOptionsItem || '.ez-block-select-field__options-item';\n      this.classOptionSelected = config.classOptionSelected || 'ez-block-select-field__options-item--selected';\n      this.classSelectedRemove = config.classSelectedRemove || 'ez-block-select-field__selected-remove';\n      this.classOptionsHidden = config.classOptionsHidden || 'ez-block-select-field__options--hidden';\n      this.handleClickOnOption = this.handleClickOnOption.bind(this);\n      this.handleClickOnInput = this.handleClickOnInput.bind(this);\n      this.handleClickOutside = this.handleClickOutside.bind(this);\n      this.handleClickOutsideCallback = null;\n    }\n    /**\n     * Create selected item\n     *\n     * @method createSelectedItem\n     * @param {HTMLElement} container\n     * @param {String} value the content type identifier\n     * @param {String} label the content type label\n     * @returns {String}\n     */\n\n\n    _createClass(BlockConfigSelectFieldBase, [{\n      key: \"createSelectedItem\",\n      value: function createSelectedItem(container, value, label) {\n        var template = container.querySelector(this.selectorSelected).dataset.templateSelectedItem;\n        return template.replace('{{ value }}', value).replace('{{ label }}', label);\n      }\n      /**\n       * Handles item selection\n       *\n       * @method handleSelection\n       * @param {HTMLElement} container\n       * @param {HTMLElement} element the item element\n       * @param {Boolean} selected\n       */\n\n    }, {\n      key: \"handleSelection\",\n      value: function handleSelection(container, element, selected) {\n        var value = element.dataset.value;\n        var cssMethodName = selected ? 'add' : 'remove';\n        var isSingleSelect = !container.querySelector(this.selectorSourceInput).multiple;\n\n        if (isSingleSelect && selected) {\n          this.hideOptions(container);\n          this.clearCurrentSelection(container);\n        }\n\n        container.querySelector(\"\".concat(this.selectorSourceInput, \" [value=\\\"\").concat(value, \"\\\"]\")).selected = selected;\n        container.querySelector(\"\".concat(this.selectorOptions, \" [data-value=\\\"\").concat(value, \"\\\"]\")).classList[cssMethodName](this.classOptionSelected);\n\n        if (selected && value) {\n          container.querySelector(this.selectorSelected).insertAdjacentHTML('beforeend', this.createSelectedItem(container, value, element.innerHTML));\n        } else {\n          container.querySelector(\"\".concat(this.selectorSelected, \" [data-value=\\\"\").concat(value, \"\\\"]\")).remove();\n        }\n\n        if (isSingleSelect && !selected) {\n          this.hideOptions(container);\n          this.selectFirstItem(container);\n        }\n      }\n      /**\n       * Selects first item\n       *\n       * @method selectFirstItem\n       * @param {HTMLElement} container\n       */\n\n    }, {\n      key: \"selectFirstItem\",\n      value: function selectFirstItem(container) {\n        var firstOption = container.querySelector(\"\".concat(this.selectorOptions, \" li\"));\n        firstOption.classList.add(this.classOptionSelected);\n\n        if (!firstOption.dataset.value) {\n          return;\n        }\n\n        container.querySelector(this.selectorSelected).insertAdjacentHTML('beforeend', this.createSelectedItem(container, firstOption.dataset.value, firstOption.innerHTML));\n      }\n      /**\n       * Clears current selection\n       *\n       * @method clearCurrentSelection\n       * @param {HTMLElement} container\n       */\n\n    }, {\n      key: \"clearCurrentSelection\",\n      value: function clearCurrentSelection(container) {\n        var _this = this;\n\n        _toConsumableArray(container.querySelectorAll(\"\".concat(this.selectorSourceInput, \" option\"))).forEach(function (option) {\n          return option.selected = false;\n        });\n\n        _toConsumableArray(container.querySelectorAll(\"\".concat(this.selectorOptions, \" .\").concat(this.classOptionSelected))).forEach(function (option) {\n          return option.classList.remove(_this.classOptionSelected);\n        });\n\n        container.querySelector(this.selectorSelected).innerHTML = '';\n      }\n      /**\n       * Handles click outside\n       *\n       * @method handleClickOutside\n       * @param {HTMLElement} container\n       * @param {Event} event\n       */\n\n    }, {\n      key: \"handleClickOutside\",\n      value: function handleClickOutside(container, _ref) {\n        var target = _ref.target;\n        var isSelectedItemClicked = target.closest(this.selectorSelected);\n        var isOptionClicked = target.closest(this.selectorOptions);\n        var isItemRemoveClicked = target.closest(\".\".concat(this.classSelectedRemove));\n\n        if (isSelectedItemClicked || isOptionClicked || isItemRemoveClicked) {\n          return;\n        }\n\n        this.hideOptions(container);\n      }\n      /**\n       * Hides options\n       *\n       * @method hideOptions\n       * @param {HTMLElement} container\n       */\n\n    }, {\n      key: \"hideOptions\",\n      value: function hideOptions(container) {\n        container.querySelector(this.selectorOptions).classList.add(this.classOptionsHidden);\n      }\n      /**\n       * Handles click on input\n       *\n       * @method handleClickOnInput\n       * @param {HTMLElement} container\n       * @param {Event} event\n       */\n\n    }, {\n      key: \"handleClickOnInput\",\n      value: function handleClickOnInput(container, _ref2) {\n        var target = _ref2.target;\n\n        if (target.classList.contains(this.classSelectedRemove)) {\n          this.handleSelection(container, target.closest(this.selectorSelectedItem), false);\n          return;\n        }\n\n        var options = container.querySelector(this.selectorOptions);\n        var shouldShowOptions = options.classList.contains(this.classOptionsHidden);\n        var methodName = shouldShowOptions ? 'addEventListener' : 'removeEventListener';\n\n        if (shouldShowOptions) {\n          this.handleClickOutsideCallback = this.handleClickOutside.bind(this, container);\n        }\n\n        options.classList.toggle(this.classOptionsHidden);\n        doc.body[methodName]('click', this.handleClickOutsideCallback, false);\n      }\n      /**\n       * Handles click on option item\n       *\n       * @method handleClickOnOption\n       * @param {HTMLElement} container\n       * @param {Event} event\n       */\n\n    }, {\n      key: \"handleClickOnOption\",\n      value: function handleClickOnOption(container, _ref3) {\n        var target = _ref3.target;\n        this.handleSelection(container, target, !target.classList.contains(this.classOptionSelected));\n      }\n      /**\n       * Initializes the select field event handlers\n       *\n       * @method init\n       */\n\n    }, {\n      key: \"init\",\n      value: function init() {\n        var _this2 = this;\n\n        var containers = _toConsumableArray(doc.querySelectorAll(this.selectorContainer));\n\n        containers.forEach(function (container) {\n          var isEmpty = !_toConsumableArray(container.querySelectorAll(_this2.selectorSelectedItem)).length;\n          var isSingle = !container.querySelector(_this2.selectorSourceInput).multiple;\n\n          var items = _toConsumableArray(container.querySelectorAll(\"\".concat(_this2.selectorOptions, \" \").concat(_this2.selectorOptionsItem)));\n\n          if (isEmpty && isSingle) {\n            _this2.selectFirstItem(container);\n          }\n\n          container.querySelector(_this2.selectorSelected).addEventListener('click', _this2.handleClickOnInput.bind(_this2, container), false);\n          items.forEach(function (option) {\n            return option.addEventListener('click', _this2.handleClickOnOption.bind(_this2, container), false);\n          });\n        });\n      }\n    }]);\n\n    return BlockConfigSelectFieldBase;\n  }();\n})(window, document);\n\n//# sourceURL=webpack:///./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.select.field.base.js?");

/***/ }),

/***/ "./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/checkbox.js":
/*!*****************************************************************************************************************!*\
  !*** ./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/checkbox.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function (doc) {\n  var SELECTOR_CHECKBOX = '.ez-block-checkbox-field__item input[type=\"checkbox\"]';\n  var SELECTOR_LABEL = '.ez-block-checkbox-field__label';\n  var CLASS_IS_CHECKED = 'is-checked';\n  var checkboxes = doc.querySelectorAll(SELECTOR_CHECKBOX);\n\n  var updateCheckboxState = function updateCheckboxState(_ref) {\n    var currentTarget = _ref.currentTarget;\n    currentTarget.closest(SELECTOR_LABEL).classList.toggle(CLASS_IS_CHECKED, currentTarget.checked);\n  };\n\n  checkboxes.forEach(function (checkbox) {\n    return checkbox.addEventListener('change', updateCheckboxState, false);\n  });\n})(window.document);\n\n//# sourceURL=webpack:///./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/checkbox.js?");

/***/ }),

/***/ "./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/collection.js":
/*!*******************************************************************************************************************!*\
  !*** ./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/collection.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n(function (global, doc, eZ) {\n  var draggable;\n  var SELECTOR_ITEM = '.ez-collection__item';\n  var openUdwBtn = doc.querySelector('.ez-btn--select-content');\n  var itemsContainer = doc.querySelector('.ez-collection__items');\n\n  var canSelectContent = function canSelectContent(_ref, callback) {\n    var item = _ref.item;\n\n    var selectedItems = _toConsumableArray(itemsContainer.querySelectorAll(SELECTOR_ITEM));\n\n    var isAlreadySelected = !!selectedItems.find(function (selectedItem) {\n      return parseInt(selectedItem.dataset.id, 10) === item.id;\n    });\n    callback(!isAlreadySelected);\n  };\n\n  var openUdw = function openUdw(event) {\n    event.preventDefault();\n    var currentTarget = event.currentTarget;\n    var config = JSON.parse(currentTarget.dataset.udwConfig);\n    var selectedView = doc.querySelector(\"#\".concat(currentTarget.dataset.view)).value;\n    var matchConfig = JSON.parse(doc.querySelector(\"#\".concat(currentTarget.dataset.target)).dataset.match);\n    var configForView = Object.assign(config, {\n      cotfAllowedContentTypes: matchConfig[selectedView]\n    });\n    var title = Translator.trans(\n    /*@Desc(\"Select content\")*/\n    'config_form.widgets.collection.udw.title', {}, 'page_builder');\n    var openUdwEvent = new CustomEvent('openUdw', {\n      detail: Object.assign({\n        title: title,\n        multiple: true,\n        startingLocationId: parseInt(eZ.adminUiConfig.universalDiscoveryWidget.startingLocationId, 10),\n        onConfirm: addItems,\n        canSelectContent: canSelectContent\n      }, configForView)\n    });\n    doc.body.dispatchEvent(openUdwEvent);\n  };\n\n  var updateInputValue = function updateInputValue() {\n    var items = _toConsumableArray(itemsContainer.querySelectorAll(SELECTOR_ITEM));\n\n    var input = doc.querySelector(\"#\".concat(openUdwBtn.dataset.target));\n    input.value = _toConsumableArray(items.map(function (item) {\n      return item.dataset.id;\n    })).join();\n  };\n\n  var attachEventsToSelectedItem = function attachEventsToSelectedItem(item) {\n    return item.querySelector('.ez-btn--trash').addEventListener('click', removeItem, false);\n  };\n\n  var addItems = function addItems(items) {\n    var fragment = doc.createDocumentFragment();\n    var template = itemsContainer.dataset.template;\n    items.forEach(function (item) {\n      var contentTypeName = eZ.adminUiConfig.contentTypeNames[item.ContentInfo.Content.ContentTypeInfo.identifier];\n      var container = doc.createElement('div');\n      var renderedItem = template.replace('{{ content_name }}', item.ContentInfo.Content.Name).replace('{{ content_type_name }}', contentTypeName).replace('{{ id }}', item.id);\n      container.insertAdjacentHTML('beforeend', renderedItem);\n      var listItem = container.querySelector(SELECTOR_ITEM);\n      fragment.append(listItem);\n    });\n    itemsContainer.append(fragment);\n    updateInputValue();\n    draggable.reinit();\n  };\n\n  var removeItem = function removeItem(event) {\n    event.preventDefault();\n    event.currentTarget.closest(SELECTOR_ITEM).remove();\n    updateInputValue();\n  };\n\n  var afterDrop = function afterDrop() {\n    return updateInputValue();\n  };\n\n  if (!itemsContainer || !openUdwBtn) {\n    return;\n  }\n\n  openUdwBtn.addEventListener('click', openUdw, false);\n  draggable = new global.eZ.core.Draggable({\n    itemsContainer: itemsContainer,\n    selectorItem: SELECTOR_ITEM,\n    selectorPlaceholder: '.ez-collection__item--placeholder',\n    attachCustomEventHandlersToItem: attachEventsToSelectedItem,\n    afterDrop: afterDrop\n  });\n  draggable.init();\n})(window, window.document, window.eZ);\n\n//# sourceURL=webpack:///./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/collection.js?");

/***/ }),

/***/ "./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/embed.js":
/*!**************************************************************************************************************!*\
  !*** ./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/embed.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function (doc, eZ) {\n  var BlockConfigEmbedFieldBase = eZ.BlockConfigEmbedFieldBase;\n  var embed = new BlockConfigEmbedFieldBase();\n  embed.init();\n})(window.document, window.eZ);\n\n//# sourceURL=webpack:///./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/embed.js?");

/***/ }),

/***/ "./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/richtext.js":
/*!*****************************************************************************************************************!*\
  !*** ./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/richtext.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function (global, doc, eZ) {\n  var openUdw = function openUdw(config) {\n    var openUdwEvent = new CustomEvent('openUdw', {\n      detail: config\n    });\n    doc.body.dispatchEvent(openUdwEvent);\n  };\n\n  eZ.addConfig('ezAlloyEditor.callbacks', {\n    openUdw: openUdw\n  });\n  var containers = doc.querySelectorAll('.ez-data-source__richtext');\n  containers.forEach(function (container) {\n    var richtext = new global.eZ.BaseRichText();\n    var alloyEditor = richtext.init(container);\n  });\n})(window, document, window.eZ);\n\n//# sourceURL=webpack:///./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/richtext.js?");

/***/ }),

/***/ "./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/schedule.js":
/*!*****************************************************************************************************************!*\
  !*** ./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/schedule.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function (global, doc, eZ) {\n  var BlockConfigScheduleFieldBase = eZ.BlockConfigScheduleFieldBase;\n  var scheduleField = new BlockConfigScheduleFieldBase();\n  scheduleField.init();\n})(window, window.document, window.eZ);\n\n//# sourceURL=webpack:///./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/schedule.js?");

/***/ }),

/***/ "./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/select.js":
/*!***************************************************************************************************************!*\
  !*** ./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/select.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function (doc, eZ) {\n  var BlockConfigSelectFieldBase = eZ.BlockConfigSelectFieldBase;\n  var contentListSelect = new BlockConfigSelectFieldBase();\n  contentListSelect.init();\n})(window.document, window.eZ);\n\n//# sourceURL=webpack:///./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/select.js?");

/***/ }),

/***/ "./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/video.js":
/*!**************************************************************************************************************!*\
  !*** ./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/video.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function (doc, eZ) {\n  var BlockConfigEmbedFieldBase = eZ.BlockConfigEmbedFieldBase;\n  var video = new BlockConfigEmbedFieldBase({\n    previewFieldTypeIdentifier: 'ezmedia',\n    openUDWSelector: '[data-open-udw-video]'\n  });\n  video.init();\n})(window.document, window.eZ);\n\n//# sourceURL=webpack:///./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/video.js?");

/***/ }),

/***/ 41:

  !*** multi ./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.embed.field.base.js ./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.select.field.base.js ./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.schedule.field.base.js ./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.scheduler.js ./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.fields.errors.js ./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/embed.js ./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/video.js ./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/select.js ./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/checkbox.js ./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/collection.js ./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/schedule.js ./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/richtext.js ***!
  \*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! /home/dev/server/pb-demo.v2/vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.embed.field.base.js */\"./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.embed.field.base.js\");\n__webpack_require__(/*! /home/dev/server/pb-demo.v2/vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.select.field.base.js */\"./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.select.field.base.js\");\n__webpack_require__(/*! /home/dev/server/pb-demo.v2/vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.schedule.field.base.js */\"./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.schedule.field.base.js\");\n__webpack_require__(/*! /home/dev/server/pb-demo.v2/vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.scheduler.js */\"./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.scheduler.js\");\n__webpack_require__(/*! /home/dev/server/pb-demo.v2/vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.fields.errors.js */\"./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.fields.errors.js\");\n__webpack_require__(/*! /home/dev/server/pb-demo.v2/vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/embed.js */\"./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/embed.js\");\n__webpack_require__(/*! /home/dev/server/pb-demo.v2/vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/video.js */\"./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/video.js\");\n__webpack_require__(/*! /home/dev/server/pb-demo.v2/vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/select.js */\"./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/select.js\");\n__webpack_require__(/*! /home/dev/server/pb-demo.v2/vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/checkbox.js */\"./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/checkbox.js\");\n__webpack_require__(/*! /home/dev/server/pb-demo.v2/vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/collection.js */\"./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/collection.js\");\n__webpack_require__(/*! /home/dev/server/pb-demo.v2/vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/schedule.js */\"./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/schedule.js\");\nmodule.exports = __webpack_require__(/*! /home/dev/server/pb-demo.v2/vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/richtext.js */\"./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/richtext.js\");\n\n\n//# sourceURL=webpack:///multi_./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.embed.field.base.js_./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.select.field.base.js_./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.schedule.field.base.js_./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.scheduler.js_./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/base/block.config.fields.errors.js_./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/embed.js_./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/video.js_./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/select.js_./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/checkbox.js_./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/collection.js_./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/schedule.js_./vendor/ezsystems/ezplatform-page-builder/src/bundle/Resources/public/js/config-form/widgets/richtext.js?");

/***/ })

},[[41,"runtime"]]]);