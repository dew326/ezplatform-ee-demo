(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["ezplatform-admin-ui-search-js"],{

/***/ "./vendor/ezsystems/ezplatform-admin-ui/src/bundle/Resources/public/js/scripts/admin.search.filters.js":
/*!*************************************************************************************************************!*\
  !*** ./vendor/ezsystems/ezplatform-admin-ui/src/bundle/Resources/public/js/scripts/admin.search.filters.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n(function (global, doc, $) {\n  var getUsersTimeout;\n  var token = doc.querySelector('meta[name=\"CSRF-Token\"]').content;\n  var siteaccess = doc.querySelector('meta[name=\"SiteAccess\"]').content;\n  var filterBtn = doc.querySelector('.ez-btn--filter');\n  var filters = doc.querySelector('.ez-filters');\n  var clearBtn = filters.querySelector('.ez-btn-clear');\n  var applyBtn = filters.querySelector('.ez-btn-apply');\n\n  var selectBtns = _toConsumableArray(doc.querySelectorAll('.ez-btn--select'));\n\n  var dateFields = _toConsumableArray(doc.querySelectorAll('.ez-date-select'));\n\n  var contentTypeSelector = doc.querySelector('.ez-content-type-selector');\n  var contentTypeSelect = doc.querySelector('.ez-filters__item--content-type .ez-filters__select');\n  var sectionSelect = doc.querySelector('.ez-filters__item--section .ez-filters__select');\n  var lastModifiedSelect = doc.querySelector('.ez-filters__item--modified .ez-filters__select');\n  var lastCreatedSelect = doc.querySelector('.ez-filters__item--created .ez-filters__select');\n  var creatorInput = doc.querySelector('.ez-filters__item--creator .ez-filters__input');\n  var searchCreatorInput = doc.querySelector('#search_creator');\n  var usersList = doc.querySelector('.ez-filters__item--creator .ez-filters__user-list');\n  var resetCreatorBtn = doc.querySelector('.ez-filters__item--creator .ez-icon--reset');\n\n  var listGroupsTitle = _toConsumableArray(doc.querySelectorAll('.ez-content-type-selector__group-title'));\n\n  var contentTypeCheckboxes = _toConsumableArray(doc.querySelectorAll('.ez-content-type-selector__item [type=\"checkbox\"]'));\n\n  var subtreeInput = doc.querySelector('#search_subtree');\n\n  var clearFilters = function clearFilters(event) {\n    event.preventDefault();\n    var option = contentTypeSelect.querySelector('option');\n    var defaultText = option.dataset.default;\n    var lastModifiedModal = doc.querySelector(lastModifiedSelect.dataset.targetSelector);\n    var lastCreatedModal = doc.querySelector(lastCreatedSelect.dataset.targetSelector);\n    var lastModifiedPeriod = doc.querySelector(lastModifiedModal.dataset.periodSelector);\n    var lastModifiedEnd = doc.querySelector(lastModifiedModal.dataset.endSelector);\n    var lastCreatedPeriod = doc.querySelector(lastCreatedModal.dataset.periodSelector);\n    var lastCreatedEnd = doc.querySelector(lastCreatedModal.dataset.endSelector);\n    option.innerHTML = defaultText;\n    contentTypeCheckboxes.forEach(function (checkbox) {\n      checkbox.removeAttribute('checked');\n      checkbox.checked = false;\n    });\n\n    if (sectionSelect) {\n      sectionSelect[0].selected = true;\n    }\n\n    lastModifiedSelect[0].selected = true;\n    lastCreatedSelect[0].selected = true;\n    lastModifiedSelect.querySelector('option').selected = true;\n    lastModifiedPeriod.value = '';\n    lastModifiedEnd.value = '';\n    lastCreatedPeriod.value = '';\n    lastCreatedEnd.value = '';\n    subtreeInput.value = '';\n    handleResetUser();\n    event.target.closest('form').submit();\n  };\n\n  var toggleDisabledStateOnApplyBtn = function toggleDisabledStateOnApplyBtn() {\n    var contentTypeOption = contentTypeSelect.querySelector('option');\n    var isContentTypeSelected = contentTypeOption.innerHTML !== contentTypeOption.dataset.default;\n    var isSectionSelected = sectionSelect ? !!sectionSelect.value : false;\n    var isModifiedSelected = !!lastModifiedSelect.value;\n    var isCreatedSelected = !!lastCreatedSelect.value;\n    var isCreatorSelected = !!searchCreatorInput.value;\n    var isSubtreeSelected = !!subtreeInput.value.trim().length;\n    var isEnabled = isContentTypeSelected || isSectionSelected || isModifiedSelected || isCreatedSelected || isCreatorSelected || isSubtreeSelected;\n    var methodName = isEnabled ? 'removeAttribute' : 'setAttribute';\n    applyBtn[methodName]('disabled', !isEnabled);\n  };\n\n  var toggleFiltersVisibility = function toggleFiltersVisibility(event) {\n    event.preventDefault();\n    filters.classList.toggle('ez-filters--collapsed');\n  };\n\n  var handleClickOutside = function handleClickOutside(event) {\n    if (event.target.closest('.ez-content-type-selector') || event.target.closest('.ez-filters__select--content-type')) {\n      return;\n    }\n\n    toggleContentTypeSelectorVisibility();\n  };\n\n  var toggleContentTypeSelectorVisibility = function toggleContentTypeSelectorVisibility(event) {\n    event.preventDefault();\n    var methodName = contentTypeSelector.classList.contains('ez-content-type-selector--collapsed') ? 'addEventListener' : 'removeEventListener';\n    contentTypeSelector.classList.toggle('ez-content-type-selector--collapsed');\n    doc.querySelector('body')[methodName]('click', handleClickOutside, false);\n  };\n\n  var toggleModalVisibility = function toggleModalVisibility(event) {\n    var modal = $(event.target.dataset.targetSelector);\n\n    if (event.target.value !== 'custom_range') {\n      doc.querySelector(modal[0].dataset.periodSelector).value = event.target.value;\n      doc.querySelector(modal[0].dataset.endSelector).value = '';\n      toggleDisabledStateOnApplyBtn();\n      return;\n    }\n\n    modal.modal('show');\n  };\n\n  var toggleGroupState = function toggleGroupState(event) {\n    event.preventDefault();\n    event.currentTarget.closest('.ez-content-type-selector__group').classList.toggle('ez-content-type-selector__group--collapsed');\n  };\n\n  var filterByContentType = function filterByContentType() {\n    var selectedCheckboxes = contentTypeCheckboxes.filter(function (checkbox) {\n      return checkbox.checked;\n    });\n    var contentTypesText = selectedCheckboxes.map(function (checkbox) {\n      return checkbox.dataset.name;\n    }).join(', ');\n    var option = contentTypeSelect[0];\n    var defaultText = option.dataset.default;\n    option.innerHTML = contentTypesText || defaultText;\n    toggleDisabledStateOnApplyBtn();\n  };\n\n  var dateConfig = {\n    formatDate: function formatDate(date) {\n      return new Date(date).toLocaleDateString();\n    }\n  };\n\n  var checkSelectFieldsFilled = function checkSelectFieldsFilled(modal) {\n    var inputs = _toConsumableArray(modal.querySelectorAll('.ez-date-select'));\n\n    var isFilled = inputs.every(function (input) {\n      return !!doc.querySelector(input.dataset.targetSelector).value.trim();\n    });\n    var methodName = isFilled ? 'removeAttribute' : 'setAttribute';\n    modal.querySelector('.ez-btn--select')[methodName]('disabled', !isFilled);\n  };\n\n  var setSelectedDateRange = function setSelectedDateRange(event) {\n    var modal = event.target.closest('.ez-modal');\n    var startInput = modal.querySelector('.ez-date-select--start');\n    var targetStartInput = doc.querySelector(startInput.dataset.targetSelector);\n    var endInput = modal.querySelector('.ez-date-select--end');\n    var targetEndInput = doc.querySelector(endInput.dataset.targetSelector);\n    var startDate = parseInt(targetStartInput.value, 10);\n    var endDate = parseInt(targetEndInput.value, 10);\n    var datePeriod = endDate - startDate;\n    var secondsInDay = 60 * 60 * 24;\n    var days = datePeriod / secondsInDay;\n    doc.querySelector(modal.dataset.periodSelector).value = \"P0Y0M\".concat(days, \"D\");\n    doc.querySelector(modal.dataset.endSelector).value = endDate;\n    toggleDisabledStateOnApplyBtn();\n  };\n\n  var updateSourceInputValue = function updateSourceInputValue(sourceInput, date) {\n    if (!date.length) {\n      sourceInput.value = '';\n      sourceInput.dispatchEvent(event);\n      return;\n    }\n\n    date = new Date(date[0]);\n    date = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n    sourceInput.value = Math.floor(date.getTime() / 1000);\n    checkSelectFieldsFilled(sourceInput.closest('.ez-modal'));\n  };\n\n  var initFlatPickr = function initFlatPickr(field) {\n    var sourceInput = doc.querySelector(field.dataset.targetSelector);\n    var flatPickrInput = field;\n    var defaultDate;\n\n    if (sourceInput.value) {\n      defaultDate = new Date(sourceInput.value * 1000);\n    }\n\n    global.flatpickr(flatPickrInput, Object.assign({}, dateConfig, {\n      onChange: updateSourceInputValue.bind(null, sourceInput),\n      defaultDate: defaultDate\n    }));\n  };\n\n  var getUsersList = function getUsersList(value) {\n    var body = JSON.stringify({\n      ViewInput: {\n        identifier: \"find-user-by-name-\".concat(value),\n        public: false,\n        ContentQuery: {\n          Criteria: {},\n          FacetBuilders: {},\n          SortClauses: {},\n          Query: {\n            FullTextCriterion: \"\".concat(value, \"*\"),\n            ContentTypeIdentifierCriterion: creatorInput.dataset.contentTypeIdentifiers\n          },\n          limit: 50,\n          offset: 0\n        }\n      }\n    });\n    var request = new Request('/api/ezp/v2/views', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/vnd.ez.api.View+json; version=1.1',\n        'Content-Type': 'application/vnd.ez.api.ViewInput+json; version=1.1',\n        'X-Siteaccess': siteaccess,\n        'X-CSRF-Token': token\n      },\n      body: body,\n      mode: 'same-origin',\n      credentials: 'same-origin'\n    });\n    fetch(request).then(function (response) {\n      return response.json();\n    }).then(showUsersList);\n  };\n\n  var createUsersListItem = function createUsersListItem(user) {\n    return \"<li data-id=\\\"\".concat(user._id, \"\\\" data-name=\\\"\").concat(user.Name, \"\\\" class=\\\"ez-filters__user-item\\\">\").concat(user.Name, \"</li>\");\n  };\n\n  var showUsersList = function showUsersList(data) {\n    var hits = data.View.Result.searchHits.searchHit;\n    var users = hits.reduce(function (total, hit) {\n      return total + createUsersListItem(hit.value.Content);\n    }, '');\n    var methodName = users ? 'addEventListener' : 'removeEventListener';\n    usersList.innerHTML = users;\n    usersList.classList.remove('ez-filters__user-list--hidden');\n    doc.querySelector('body')[methodName]('click', handleClickOutsideUserList, false);\n  };\n\n  var handleTyping = function handleTyping(event) {\n    var value = event.target.value.trim();\n    window.clearTimeout(getUsersTimeout);\n\n    if (value.length > 2) {\n      getUsersTimeout = window.setTimeout(getUsersList.bind(null, value), 200);\n    } else {\n      usersList.classList.add('ez-filters__user-list--hidden');\n      doc.querySelector('body').removeEventListener('click', handleClickOutsideUserList, false);\n    }\n  };\n\n  var handleSelectUser = function handleSelectUser(event) {\n    searchCreatorInput.value = event.target.dataset.id;\n    usersList.classList.add('ez-filters__user-list--hidden');\n    creatorInput.value = event.target.dataset.name;\n    creatorInput.setAttribute('disabled', true);\n    doc.querySelector('body').removeEventListener('click', handleClickOutsideUserList, false);\n    toggleDisabledStateOnApplyBtn();\n  };\n\n  var handleResetUser = function handleResetUser() {\n    searchCreatorInput.value = '';\n    creatorInput.value = '';\n    creatorInput.removeAttribute('disabled');\n    toggleDisabledStateOnApplyBtn();\n  };\n\n  var handleClickOutsideUserList = function handleClickOutsideUserList(event) {\n    if (event.target.closest('.ez-filters__item--creator')) {\n      return;\n    }\n\n    creatorInput.value = '';\n    usersList.classList.add('ez-filters__user-list--hidden');\n    doc.querySelector('body').removeEventListener('click', handleClickOutsideUserList, false);\n  };\n\n  dateFields.forEach(initFlatPickr);\n  filterByContentType();\n  clearBtn.addEventListener('click', clearFilters, false);\n  filterBtn.addEventListener('click', toggleFiltersVisibility, false);\n  contentTypeSelect.addEventListener('mousedown', toggleContentTypeSelectorVisibility, false);\n\n  if (sectionSelect) {\n    sectionSelect.addEventListener('change', toggleDisabledStateOnApplyBtn, false);\n  }\n\n  subtreeInput.addEventListener('change', toggleDisabledStateOnApplyBtn, false);\n  lastModifiedSelect.addEventListener('change', toggleModalVisibility, false);\n  lastCreatedSelect.addEventListener('change', toggleModalVisibility, false);\n  creatorInput.addEventListener('keyup', handleTyping, false);\n  usersList.addEventListener('click', handleSelectUser, false);\n  resetCreatorBtn.addEventListener('click', handleResetUser, false);\n  listGroupsTitle.forEach(function (group) {\n    return group.addEventListener('click', toggleGroupState, false);\n  });\n  contentTypeCheckboxes.forEach(function (checkbox) {\n    return checkbox.addEventListener('change', filterByContentType, false);\n  });\n  selectBtns.forEach(function (btn) {\n    return btn.addEventListener('click', setSelectedDateRange, false);\n  });\n})(window, document, window.jQuery);\n\n//# sourceURL=webpack:///./vendor/ezsystems/ezplatform-admin-ui/src/bundle/Resources/public/js/scripts/admin.search.filters.js?");

/***/ }),

/***/ "./vendor/ezsystems/ezplatform-admin-ui/src/bundle/Resources/public/js/scripts/button.content.edit.js":
/*!************************************************************************************************************!*\
  !*** ./vendor/ezsystems/ezplatform-admin-ui/src/bundle/Resources/public/js/scripts/button.content.edit.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n(function (global, doc, $) {\n  var FORM_EDIT = 'form.ez-edit-content-form';\n\n  var editVersion = function editVersion(event) {\n    var versionEditForm = doc.querySelector(FORM_EDIT);\n    var versionEditFormName = versionEditForm.name;\n    var contentId = event.currentTarget.dataset.contentId;\n    var versionNo = event.currentTarget.dataset.versionNo;\n    var languageCode = event.currentTarget.dataset.languageCode;\n    var contentInfoInput = versionEditForm.querySelector('input[name=\"' + versionEditFormName + '[content_info]\"]');\n    var versionInfoContentInfoInput = versionEditForm.querySelector('input[name=\"' + versionEditFormName + '[version_info][content_info]\"]');\n    var versionInfoVersionNoInput = versionEditForm.querySelector('input[name=\"' + versionEditFormName + '[version_info][version_no]\"]');\n    var languageInput = versionEditForm.querySelector('#' + versionEditFormName + '_language_' + languageCode);\n    var checkVersionDraftLink = global.Routing.generate('ezplatform.version_draft.has_no_conflict', {\n      contentId: contentId\n    });\n\n    var submitVersionEditForm = function submitVersionEditForm() {\n      contentInfoInput.value = contentId;\n      versionInfoContentInfoInput.value = contentId;\n      versionInfoVersionNoInput.value = versionNo;\n      languageInput.checked = true;\n      versionEditForm.submit();\n    };\n\n    var addDraft = function addDraft() {\n      submitVersionEditForm();\n      $('#version-draft-conflict-modal').modal('hide');\n    };\n\n    var showModal = function showModal(modalHtml) {\n      var wrapper = doc.querySelector('.ez-modal-wrapper');\n      wrapper.innerHTML = modalHtml;\n      var addDraftButton = wrapper.querySelector('.ez-btn--add-draft');\n\n      if (addDraftButton) {\n        addDraftButton.addEventListener('click', addDraft, false);\n      }\n\n      _toConsumableArray(wrapper.querySelectorAll('.ez-btn--prevented')).forEach(function (btn) {\n        return btn.addEventListener('click', function (event) {\n          return event.preventDefault();\n        }, false);\n      });\n\n      $('#version-draft-conflict-modal').modal('show');\n    };\n\n    event.preventDefault();\n    fetch(checkVersionDraftLink, {\n      credentials: 'same-origin'\n    }).then(function (response) {\n      // Status 409 means that a draft conflict has occurred and the modal must be displayed.\n      // Otherwise we can go to Content Item edit page.\n      if (response.status === 409) {\n        response.text().then(showModal);\n      } else if (response.status === 200) {\n        submitVersionEditForm();\n      }\n    });\n  };\n\n  _toConsumableArray(doc.querySelectorAll('.ez-btn--content-edit')).forEach(function (button) {\n    return button.addEventListener('click', editVersion, false);\n  });\n})(window, document, window.jQuery);\n\n//# sourceURL=webpack:///./vendor/ezsystems/ezplatform-admin-ui/src/bundle/Resources/public/js/scripts/button.content.edit.js?");

/***/ }),

/***/ "./vendor/ezsystems/ezplatform-admin-ui/src/bundle/Resources/public/js/scripts/udw/select.location.js":
/*!************************************************************************************************************!*\
  !*** ./vendor/ezsystems/ezplatform-admin-ui/src/bundle/Resources/public/js/scripts/udw/select.location.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function (global, doc, eZ, React, ReactDOM, Translator) {\n  var btns = doc.querySelectorAll('.ez-btn--udw-select-location');\n  var udwContainer = doc.getElementById('react-udw');\n  var token = doc.querySelector('meta[name=\"CSRF-Token\"]').content;\n  var siteaccess = doc.querySelector('meta[name=\"SiteAccess\"]').content;\n\n  var findLocationsByIdList = function findLocationsByIdList(idList, callback) {\n    var body = JSON.stringify({\n      ViewInput: {\n        identifier: \"udw-locations-by-path-string-\".concat(idList.join('-')),\n        public: false,\n        LocationQuery: {\n          Criteria: {},\n          FacetBuilders: {},\n          SortClauses: {\n            SectionIdentifier: 'ascending'\n          },\n          Filter: {\n            LocationIdCriterion: idList.join(',')\n          },\n          limit: 50,\n          offset: 0\n        }\n      }\n    });\n    var request = new Request('/api/ezp/v2/views', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/vnd.ez.api.View+json; version=1.1',\n        'Content-Type': 'application/vnd.ez.api.ViewInput+json; version=1.1',\n        'X-Requested-With': 'XMLHttpRequest',\n        'X-Siteaccess': siteaccess,\n        'X-CSRF-Token': token\n      },\n      body: body,\n      mode: 'same-origin',\n      credentials: 'same-origin'\n    });\n    var errorMessage = Translator.trans(\n    /*@Desc(\"Cannot find children locations with given id - %idList%\")*/\n    'select_location.error', {\n      idList: idList.join(',')\n    }, 'universal_discovery_widget');\n    fetch(request).then(eZ.helpers.request.getJsonFromResponse).then(callback).catch(function () {\n      return eZ.helpers.notification.showErrorNotification(errorMessage);\n    });\n  };\n\n  var removeRootFromPathString = function removeRootFromPathString(pathString) {\n    var pathArray = pathString.split('/').filter(function (val) {\n      return val;\n    });\n    return pathArray.splice(1, pathArray.length - 1);\n  };\n\n  var buildBreadcrumbsString = function buildBreadcrumbsString(viewData) {\n    var searchHitList = viewData.View.Result.searchHits.searchHit;\n    return searchHitList.map(function (searchHit) {\n      return searchHit.value.Location.ContentInfo.Content.Name;\n    }).join(' / ');\n  };\n\n  var toggleVisibility = function toggleVisibility(btn, isLocationSelected) {\n    var contentBreadcrumbsWrapper = doc.querySelector(btn.dataset.contentBreadcrumbsSelector);\n    btn.hidden = isLocationSelected;\n\n    if (contentBreadcrumbsWrapper) {\n      contentBreadcrumbsWrapper.hidden = !isLocationSelected;\n    }\n  };\n\n  var updateBreadcrumbsState = function updateBreadcrumbsState(btn, pathString) {\n    var pathStringInput = doc.querySelector(btn.dataset.locationPathInputSelector);\n    var contentBreadcrumbsContainer = doc.querySelector(btn.dataset.contentBreadcrumbsSelector);\n    var contentBreadcrumbs = contentBreadcrumbsContainer.querySelector('.ez-tag__content');\n    var contentBreadcrumbsSpinner = contentBreadcrumbsContainer.querySelector('.ez-tag__spinner');\n    pathStringInput.value = pathString;\n    pathStringInput.dispatchEvent(new Event('change'));\n\n    if (!contentBreadcrumbs || !contentBreadcrumbsSpinner) {\n      return;\n    }\n\n    if (!pathString) {\n      contentBreadcrumbs.innerHTML = '';\n      contentBreadcrumbs.hidden = true;\n    } else {\n      contentBreadcrumbsSpinner.hidden = false;\n      findLocationsByIdList(removeRootFromPathString(pathString), function (data) {\n        contentBreadcrumbs.innerHTML = buildBreadcrumbsString(data);\n        contentBreadcrumbsSpinner.hidden = true;\n        contentBreadcrumbs.hidden = false;\n      });\n    }\n  };\n\n  var closeUDW = function closeUDW() {\n    return ReactDOM.unmountComponentAtNode(udwContainer);\n  };\n\n  var onConfirm = function onConfirm(btn, items) {\n    closeUDW();\n    var pathString = items[0].pathString;\n    updateBreadcrumbsState(btn, pathString);\n    toggleVisibility(btn, !!pathString);\n  };\n\n  var onCancel = function onCancel() {\n    return closeUDW();\n  };\n\n  var openUDW = function openUDW(event) {\n    event.preventDefault();\n    var config = JSON.parse(event.currentTarget.dataset.udwConfig);\n    ReactDOM.render(React.createElement(eZ.modules.UniversalDiscovery, Object.assign({\n      onConfirm: onConfirm.bind(null, event.currentTarget),\n      onCancel: onCancel,\n      title: event.currentTarget.dataset.universalDiscoveryTitle,\n      multiple: false,\n      startingLocationId: eZ.adminUiConfig.universalDiscoveryWidget.startingLocationId,\n      restInfo: {\n        token: token,\n        siteaccess: siteaccess\n      }\n    }, config)), udwContainer);\n  };\n\n  var clearSelection = function clearSelection(btn) {\n    updateBreadcrumbsState(btn, '');\n    toggleVisibility(btn, false);\n  };\n\n  btns.forEach(function (btn) {\n    btn.addEventListener('click', openUDW, false);\n    var tag = doc.querySelector(btn.dataset.contentBreadcrumbsSelector);\n    var clearBtn = tag.querySelector('.ez-tag__remove-btn');\n\n    if (clearBtn) {\n      clearBtn.addEventListener('click', clearSelection.bind(null, btn), false);\n    }\n  });\n})(window, document, window.eZ, window.React, window.ReactDOM, window.Translator);\n\n//# sourceURL=webpack:///./vendor/ezsystems/ezplatform-admin-ui/src/bundle/Resources/public/js/scripts/udw/select.location.js?");

/***/ }),

/***/ 9:
/*!*****************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** multi ./vendor/ezsystems/ezplatform-admin-ui/src/bundle/Resources/public/js/scripts/button.content.edit.js ./vendor/ezsystems/ezplatform-admin-ui/src/bundle/Resources/public/js/scripts/admin.search.filters.js ./vendor/ezsystems/ezplatform-admin-ui/src/bundle/Resources/public/js/scripts/udw/select.location.js ***!
  \*****************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! /home/dev/server/pb-demo.v2/vendor/ezsystems/ezplatform-admin-ui/src/bundle/Resources/public/js/scripts/button.content.edit.js */\"./vendor/ezsystems/ezplatform-admin-ui/src/bundle/Resources/public/js/scripts/button.content.edit.js\");\n__webpack_require__(/*! /home/dev/server/pb-demo.v2/vendor/ezsystems/ezplatform-admin-ui/src/bundle/Resources/public/js/scripts/admin.search.filters.js */\"./vendor/ezsystems/ezplatform-admin-ui/src/bundle/Resources/public/js/scripts/admin.search.filters.js\");\nmodule.exports = __webpack_require__(/*! /home/dev/server/pb-demo.v2/vendor/ezsystems/ezplatform-admin-ui/src/bundle/Resources/public/js/scripts/udw/select.location.js */\"./vendor/ezsystems/ezplatform-admin-ui/src/bundle/Resources/public/js/scripts/udw/select.location.js\");\n\n\n//# sourceURL=webpack:///multi_./vendor/ezsystems/ezplatform-admin-ui/src/bundle/Resources/public/js/scripts/button.content.edit.js_./vendor/ezsystems/ezplatform-admin-ui/src/bundle/Resources/public/js/scripts/admin.search.filters.js_./vendor/ezsystems/ezplatform-admin-ui/src/bundle/Resources/public/js/scripts/udw/select.location.js?");

/***/ })

},[[9,"runtime"]]]);